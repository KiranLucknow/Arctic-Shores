{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-06T15:10:38.371Z",
    "end": "2023-08-06T15:11:26.371Z",
    "duration": 48000,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "69754204-4ebf-47d4-888a-7bde81ce16f1",
      "title": "",
      "fullFile": "cypress\\integration\\test\\PurchasingE2E.js",
      "file": "cypress\\integration\\test\\PurchasingE2E.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a019223f-3748-4a53-985b-ababb1953b91",
          "title": "End to End shopping for a valid user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My First TestCase",
              "fullTitle": "End to End shopping for a valid user My First TestCase",
              "timedOut": null,
              "duration": 35178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//instantiating the Homepage\nconst homePage = new _Homepage.default();\n//instantiating the LoginPage\nconst loginPage = new _LoginPage.default();\n//instantiating the CheckoutPage\nconst checkoutPage = new _checkoutPage.default();\n//instantiating the CustomerDetailPage\nconst customerDetailPage = new _CustomerDetailPage.default();\n//instantiating the PaymentPage\nconst paymentPage = new _PaymentPage.default();\n//instantiating the PurchaseCompletionPage\nconst purchaseCompletionPage = new _PurchaseCompletionPage.default();\n//To get the web page through the environmental variable 'url' in config file\ncy.visit(Cypress.env('url'));\n//To enter the data for the username through fixtures folder\nloginPage.getUserNameField().type(this.data.username);\n//To enter the data for the password through fixtures folder\nloginPage.getPasswordField().type(this.data.password);\n//to click the login button\nloginPage.getLoginClickButton().click();\n//to get all products and access each product individually\nhomePage.getAllProducts().each(($el, index, $list) => {\n  //to get the name of the each product\n  const productName = $el.find('.inventory_item_name').text();\n  cy.log(productName);\n  //to verify the name of the product, is the product user need\n  if (productName.includes(this.data.productName)) {\n    //logging the product name\n    cy.log(productName);\n    //clicking on the Add-to-Cart button\n    cy.wrap($el).find('button').click();\n  }\n});\n//clicking on the carton icon to navigate to see the price\nhomePage.getCartIcon().click();\ncy.wait(5000);\n//clicking on the checkoutout button to navigate to user's detail page\ncheckoutPage.getCheckouButton().click();\n//entering the user first name\ncustomerDetailPage.getCustomerFirstName().type(this.data.FirstName);\n//entering the user Last name\ncustomerDetailPage.getCustomerLastName().type(this.data.LastName);\n//entering the user zip code\ncustomerDetailPage.getCustomerZipCode().type(this.data.ZipCode);\n//Clicking on the Continue button\ncustomerDetailPage.getContinueButton().click();\n//clicking on the finish button to validate the shopping\npaymentPage.getFinishButton().click();\n//to verify if the thankyou message is displaying \nif (purchaseCompletionPage.getThankyouButton().contains, 'Thank you for your order!') {\n  //printing \"Purchasing Done\" in the runner log\n  cy.log('Purchasing Done');\n}\n//purchase is not completed as thankyou message is not displaying\nelse cy.log('not done');",
              "err": {},
              "uuid": "a39a505e-5b52-4d13-a2c8-87ee5c21b4df",
              "parentUUID": "a019223f-3748-4a53-985b-ababb1953b91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a39a505e-5b52-4d13-a2c8-87ee5c21b4df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}